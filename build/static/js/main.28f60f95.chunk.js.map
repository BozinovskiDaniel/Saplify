{"version":3,"sources":["redux/reducers/userReducer.js","redux/reducers/dataReducer.js","redux/reducers/uiReducer.js","redux/store.js","redux/types.js","redux/actions/userActions.js","util/myButton.js","redux/actions/dataActions.js","components/scream/PostScream.js","components/layout/Notifications.js","components/layout/FriendsList.js","components/layout/Navbar.js","util/AuthRoute.js","components/scream/DeleteScream.js","components/scream/LikeButton.js","components/scream/Comments.js","components/scream/CommentForm.js","components/scream/ScreamDialog.js","components/scream/Scream.js","components/profile/EditDetails.js","util/ProfileSkeleton.js","components/profile/Profile.js","util/ScreamSkeleton.js","components/layout/ShortCuts.js","components/scream/ScreamPost.js","components/profile/Friends.js","pages/home.js","pages/login.js","pages/signup.js","components/profile/StaticProfile.js","components/layout/Socials.js","pages/user.js","App.js","util/theme.js","serviceWorker.js","index.js","images/no-img.png","images/main.png"],"names":["initialState","authenticated","loading","credentials","likes","notifications","screams","scream","weather","errors","middleWare","thunk","rootReducer","combineReducers","user","state","action","type","payload","userHandle","handle","screamId","filter","like","forEach","not","read","data","index","findIndex","splice","comments","UI","store","createStore","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","logoutUser","dispatch","localStorage","removeItem","axios","defaults","headers","common","getUserData","get","then","res","catch","err","console","log","setAuthorizationHeader","token","FBIdToken","setItem","children","onClick","tip","btnClassName","tipClassName","Tooltip","title","className","placement","IconButton","postScream","newScream","post","clearErrors","response","connect","withStyles","theme","spreadThis","submitButton","position","marginBottom","marginTop","progressSpinner","closeButton","left","top","props","useState","open","setOpen","body","setBody","setErrors","useEffect","handleClose","classes","Dialog","onClose","fullWidth","maxWidth","DialogTitle","DialogContent","onSubmit","event","preventDefault","TextField","name","label","multiline","rows","placeholder","error","helperText","textField","onChange","target","value","Button","variant","color","disabled","CircularProgress","size","markNotificationsRead","notificationIds","dayjs","extend","relativeTime","notificationsIcon","anchorEl","setAnchorEl","length","Badge","badgeContent","notificationsMarkup","map","verb","time","createdAt","fromNow","iconColor","icon","style","marginRight","MenuItem","key","Typography","component","Link","to","recipient","sender","aria-owns","undefined","aria-haspopup","Menu","Boolean","onEntered","unreadNotificationsIds","notificationId","FriendsList","friends","setFriends","friendsListMarkup","friend","AppBar","Toolbar","Component","rest","render","deleteScream","delete","deleteButton","DialogActions","LikeButton","find","unlikeScream","likeScream","propTypes","PropTypes","object","isRequired","string","func","mapActionsToProps","commentImage","height","width","objectFit","borderRadius","commentData","marginLeft","Grid","container","comment","userImage","item","sm","src","alt","format","invisibleSeparator","visibleSeparator","CommentForm","textAlign","submitComment","button","bool","getScream","profileImage","dialogContent","padding","expandButton","spinnerDiv","oldPath","setOldPath","setNewPath","openDialog","handleOpen","location","pathname","newPath","history","pushState","likeCount","commentCount","dialogMarkup","thickness","spacing","card","display","image","minWidth","content","Card","CardMedia","CardContent","editUserDetails","userDetails","float","bio","setBio","website","setWebsite","setLocation","handleChange","mapUserDetailsToState","backgroundColor","palette","primary","main","margin","fullLine","halfLine","Paper","paper","profile","NoImg","Profile","imageUrl","id","hidden","files","formData","FormData","append","uploadImage","document","getElementById","click","href","rel","align","buttons","cardContent","flexDirection","cover","date","Array","from","root","paddingTop","paddingBottom","fontSize","fontWeight","borderBottom","List","aria-label","ListItem","ListItemIcon","ListItemText","myDiv","userPostImage","footerPost","postScreamMarkup","myContainer","flexGrow","img","maxHeight","friendsChatIcon","light","ButtonBase","xs","direction","gutterBottom","email","getScreams","recentScreamsMarkup","loginUser","userData","push","setEmail","password","setPassword","e","form","AppIcon","pageTitle","noValidate","general","customError","progress","signupUser","newUserData","confirmPassword","setConfirmPassword","setHandle","facebook","twitter","youtube","coverImage","boxShadow","background","backgroundRepeat","backgroundAttachment","backgroundSize","backgroundPosition","insideCover","zIndex","editCoverPhotoBtn","outline","addFriendBtn","selectionBar","ul","listStyleType","transform","li","cursor","navtitle","paddingRight","navImageContainer","bottom","navImage","border","setProfile","screamIdParam","setScreamIdParam","match","params","screamsMarkup","createMuiTheme","dark","contrastText","secondary","typography","useNextVariants","verticalAlign","baseURL","jwtDecode","exp","Date","now","App","exact","path","home","login","signup","hostname","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.28f60f95.chunk.js","sourcesContent":["import {\n  SET_USER,\n  SET_AUTHENTICATED,\n  SET_UNAUTHENTICATED,\n  LOADING_USER,\n  LIKE_SCREAM,\n  UNLIKE_SCREAM,\n  MARK_NOTIFICATIONS_READ,\n} from \"../types\";\n\nconst initialState = {\n  authenticated: false,\n  loading: false,\n  credentials: {},\n  likes: [],\n  notifications: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_AUTHENTICATED:\n      return {\n        ...state,\n        authenticated: true,\n      };\n    case SET_UNAUTHENTICATED:\n      return initialState;\n    case SET_USER:\n      return {\n        authenticated: true,\n        loading: false,\n        ...action.payload,\n      };\n    case LOADING_USER:\n      return {\n        ...state,\n        loading: true,\n      };\n    case LIKE_SCREAM:\n      return {\n        ...state,\n        likes: [\n          ...state.likes,\n          {\n            userHandle: state.credentials.handle,\n            screamId: action.payload.screamId,\n          },\n        ],\n      };\n    case UNLIKE_SCREAM:\n      return {\n        ...state,\n        likes: state.likes.filter(\n          (like) => like.screamId !== action.payload.screamId\n        ),\n      };\n    case MARK_NOTIFICATIONS_READ:\n      state.notifications.forEach((not) => (not.read = true));\n      return {\n        ...state,\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  SET_SCREAMS,\n  LIKE_SCREAM,\n  UNLIKE_SCREAM,\n  LOADING_DATA,\n  DELETE_SCREAM,\n  POST_SCREAM,\n  SET_SCREAM,\n  SUBMIT_COMMENT,\n  GET_CURRENT_WEATHER,\n} from \"../types\";\n\nconst initialState = {\n  screams: [],\n  scream: {},\n  weather: {},\n  loading: false,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case LOADING_DATA:\n      return {\n        ...state,\n        loading: true,\n      };\n    case SET_SCREAMS:\n      return {\n        ...state,\n        screams: action.payload,\n        loading: false,\n      };\n    case SET_SCREAM:\n      return {\n        ...state,\n        scream: action.payload,\n      };\n    case LIKE_SCREAM:\n    case UNLIKE_SCREAM:\n      let index = state.screams.findIndex(\n        (scream) => scream.screamId === action.payload.screamId\n      );\n      state.screams[index] = action.payload;\n      if (state.scream.screamId === action.payload.screamId) {\n        state.scream = action.payload;\n      }\n      return {\n        ...state,\n      };\n    case DELETE_SCREAM:\n      index = state.screams.findIndex(\n        (scream) => scream.screamId === action.payload\n      );\n      state.screams.splice(index, 1);\n      return {\n        ...state,\n      };\n    case POST_SCREAM:\n      return {\n        ...state,\n        screams: [action.payload, ...state.screams],\n      };\n    case SUBMIT_COMMENT:\n      return {\n        ...state,\n        scream: {\n          ...state.scream,\n          comments: [action.payload, ...state.scream.comments],\n        },\n      };\n    case GET_CURRENT_WEATHER:\n      return {\n        ...state,\n        weather: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  SET_ERRORS,\n  CLEAR_ERRORS,\n  LOADING_UI,\n  STOP_LOADING_UI,\n} from \"../types\";\n\nconst initialState = {\n  loading: false,\n  errors: null,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_ERRORS:\n      return {\n        ...state,\n        loading: false,\n        errors: action.payload,\n      };\n    case CLEAR_ERRORS:\n      return {\n        ...state,\n        loading: false,\n        errors: null,\n      };\n    case LOADING_UI:\n      return {\n        ...state,\n        loading: true,\n      };\n    case STOP_LOADING_UI:\n      return {\n        ...state,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nimport userReducer from \"./reducers/userReducer\";\nimport dataReducer from \"./reducers/dataReducer\";\nimport uiReducer from \"./reducers/uiReducer\";\n\nconst initialState = {};\n\nconst middleWare = [thunk];\n\nconst rootReducer = combineReducers({\n  user: userReducer,\n  data: dataReducer,\n  UI: uiReducer,\n});\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleWare),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nexport default store;\n","// User reducer types\nexport const SET_AUTHENTICATED = \"SET_AUTHENTICATED\";\nexport const SET_UNAUTHENTICATED = \"SET_UNAUTHENTICATED\";\nexport const SET_USER = \"SET_USER\";\nexport const LOADING_USER = \"LOADING_USER\";\nexport const MARK_NOTIFICATIONS_READ = \"MARK_NOTIFICATIONS_READ\";\n// UI reducer types\nexport const SET_ERRORS = \"SET_ERRORS\";\nexport const LOADING_UI = \"LOADING_UI\";\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\nexport const LOADING_DATA = \"LOADING_DATA\";\nexport const STOP_LOADING_UI = \"STOP_LOADING_UI\";\n// Data reducer types\nexport const SET_SCREAMS = \"SET_SCREAMS\";\nexport const SET_SCREAM = \"SET_SCREAM\";\nexport const LIKE_SCREAM = \"LIKE_SCREAM\";\nexport const UNLIKE_SCREAM = \"UNLIKE_SCREAM\";\nexport const DELETE_SCREAM = \"DELETE_SCREAM\";\nexport const POST_SCREAM = \"POST_SCREAM\";\nexport const SUBMIT_COMMENT = \"SUBMIT_COMMENT\";\nexport const GET_CURRENT_WEATHER = \"GET_CURRENT_WEATHER\";\n","import {\n  SET_USER,\n  SET_ERRORS,\n  CLEAR_ERRORS,\n  LOADING_UI,\n  SET_UNAUTHENTICATED,\n  LOADING_USER,\n  MARK_NOTIFICATIONS_READ,\n} from \"../types\";\nimport axios from \"axios\";\n\nexport const loginUser = (userData, history) => (dispatch) => {\n  dispatch({ type: LOADING_UI });\n  axios\n    .post(\"/login\", userData)\n    .then((res) => {\n      setAuthorizationHeader(res.data.token);\n      dispatch(getUserData());\n      dispatch({ type: CLEAR_ERRORS });\n      history.push(\"/\");\n    })\n    .catch((err) => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response.data,\n      });\n    });\n};\n\nexport const signupUser = (newUserData, history) => (dispatch) => {\n  dispatch({ type: LOADING_UI });\n  axios\n    .post(\"/signup\", newUserData)\n    .then((res) => {\n      setAuthorizationHeader(res.data.token);\n      dispatch(getUserData());\n      dispatch({ type: CLEAR_ERRORS });\n      history.push(\"/\");\n    })\n    .catch((err) => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response.data,\n      });\n    });\n};\n\nexport const logoutUser = () => (dispatch) => {\n  localStorage.removeItem(\"FBIdToken\");\n  delete axios.defaults.headers.common[\"Authorization\"];\n  dispatch({ type: SET_UNAUTHENTICATED });\n};\n\nexport const getUserData = () => (dispatch) => {\n  dispatch({ type: LOADING_USER });\n  axios\n    .get(\"/user\")\n    .then((res) => {\n      dispatch({\n        type: SET_USER,\n        payload: res.data,\n      });\n    })\n    .catch((err) => console.log(err));\n};\n\nexport const uploadImage = (formData) => (dispatch) => {\n  dispatch({ type: LOADING_USER });\n  console.log(formData);\n  axios\n    .post(\"/user/image\", formData)\n    .then(() => {\n      dispatch(getUserData());\n    })\n    .catch((err) => console.log(err));\n};\n\nexport const editUserDetails = (userDetails) => (dispatch) => {\n  dispatch({ type: LOADING_USER });\n  axios\n    .post(\"/user\", userDetails)\n    .then(() => {\n      dispatch(getUserData());\n    })\n    .catch((err) => console.log(err));\n};\n\nexport const markNotificationsRead = (notificationIds) => (dispatch) => {\n  axios\n    .post(\"/notifications\", notificationIds)\n    .then((res) => {\n      dispatch({\n        type: MARK_NOTIFICATIONS_READ,\n      });\n    })\n    .catch((err) => console.log(err));\n};\n\nconst setAuthorizationHeader = (token) => {\n  const FBIdToken = `Bearer ${token}`;\n  localStorage.setItem(\"FBIdToken\", FBIdToken);\n  axios.defaults.headers.common[\"Authorization\"] = FBIdToken;\n};\n","import React from \"react\";\n\n// material ui\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nexport default ({ children, onClick, tip, btnClassName, tipClassName }) => (\n  <Tooltip title={tip} className={tipClassName} placement=\"bottom\">\n    <IconButton onClick={onClick} className={btnClassName}>\n      {children}\n    </IconButton>\n  </Tooltip>\n);\n","import {\n  SET_SCREAMS,\n  LOADING_DATA,\n  LIKE_SCREAM,\n  UNLIKE_SCREAM,\n  DELETE_SCREAM,\n  SET_ERRORS,\n  POST_SCREAM,\n  CLEAR_ERRORS,\n  LOADING_UI,\n  SET_SCREAM,\n  STOP_LOADING_UI,\n  SUBMIT_COMMENT,\n  GET_CURRENT_WEATHER,\n} from \"../types\";\nimport axios from \"axios\";\n\n// Get all screams\nexport const getScreams = () => (dispatch) => {\n  dispatch({ type: LOADING_DATA });\n  axios\n    .get(\"/screams\")\n    .then((res) => {\n      dispatch({\n        type: SET_SCREAMS,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      dispatch({\n        type: SET_SCREAMS,\n        payload: [],\n      });\n    });\n};\nexport const getScream = (screamId) => (dispatch) => {\n  dispatch({ type: LOADING_UI });\n  axios\n    .get(`/scream/${screamId}`)\n    .then((res) => {\n      dispatch({\n        type: SET_SCREAM,\n        payload: res.data,\n      });\n      dispatch({ type: STOP_LOADING_UI });\n    })\n    .catch((err) => console.log(err));\n};\n// Post a scream\nexport const postScream = (newScream) => (dispatch) => {\n  dispatch({ type: LOADING_UI });\n  axios\n    .post(\"/scream\", newScream)\n    .then((res) => {\n      dispatch({\n        type: POST_SCREAM,\n        payload: res.data,\n      });\n      dispatch(clearErrors());\n    })\n    .catch((err) => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response.data,\n      });\n    });\n};\n// Like a scream\nexport const likeScream = (screamId) => (dispatch) => {\n  axios\n    .get(`/scream/${screamId}/like`)\n    .then((res) => {\n      dispatch({\n        type: LIKE_SCREAM,\n        payload: res.data,\n      });\n    })\n    .catch((err) => console.log(err));\n};\n// Unlike a scream\nexport const unlikeScream = (screamId) => (dispatch) => {\n  axios\n    .get(`/scream/${screamId}/unlike`)\n    .then((res) => {\n      dispatch({\n        type: UNLIKE_SCREAM,\n        payload: res.data,\n      });\n    })\n    .catch((err) => console.log(err));\n};\n// Submit a comment\nexport const submitComment = (screamId, commentData) => (dispatch) => {\n  axios\n    .post(`/scream/${screamId}/comment`, commentData)\n    .then((res) => {\n      dispatch({\n        type: SUBMIT_COMMENT,\n        payload: res.data,\n      });\n      dispatch(clearErrors());\n    })\n    .catch((err) => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response.data,\n      });\n    });\n};\nexport const deleteScream = (screamId) => (dispatch) => {\n  axios\n    .delete(`/scream/${screamId}`)\n    .then(() => {\n      dispatch({ type: DELETE_SCREAM, payload: screamId });\n    })\n    .catch((err) => console.log(err));\n};\n\nexport const getUserData = (userHandle) => (dispatch) => {\n  dispatch({ type: LOADING_DATA });\n  axios\n    .get(`/user/${userHandle}`)\n    .then((res) => {\n      dispatch({\n        type: SET_SCREAMS,\n        payload: res.data.screams,\n      });\n    })\n    .catch(() => {\n      dispatch({\n        type: SET_SCREAMS,\n        payload: null,\n      });\n    });\n};\n\nexport const getCurrentWeather = (location) => (dispatch) => {\n  dispatch({ type: LOADING_DATA });\n  const API_KEY = \"fba73d1121744a588e3234727201604\";\n  const url = \"http://api.weatherapi.com/v1/current.json?key=\";\n  axios\n    .get(url + API_KEY + location)\n    .then((result) => {\n      console.log(result.data);\n      dispatch({\n        type: GET_CURRENT_WEATHER,\n        payload: result.data,\n      });\n    })\n    .catch((err) => {\n      console.error(err);\n    });\n};\n\nexport const clearErrors = () => (dispatch) => {\n  dispatch({ type: CLEAR_ERRORS });\n};\n","import React, { useState, useEffect, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport MyButton from \"../../util/myButton\";\n\n// Material UI\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\n// Redux\nimport { connect } from \"react-redux\";\nimport { postScream, clearErrors } from \"../../redux/actions/dataActions\";\n\nconst styles = (theme) => ({\n  ...theme.spreadThis,\n  submitButton: {\n    position: \"relative\",\n    marginBottom: \"20px\",\n    marginTop: \"20px\",\n  },\n  progressSpinner: {\n    position: \"absolute\",\n  },\n  closeButton: {\n    position: \"absolute\",\n    left: \"90%\",\n    top: \"6%\",\n  },\n});\n\nfunction PostScream(props) {\n  const [open, setOpen] = useState(false);\n  const [body, setBody] = useState(\"\");\n  const [errors, setErrors] = useState({});\n\n  useEffect(() => {\n    if (props.UI.errors) {\n      setErrors(props.UI.errors);\n    }\n    if (!props.UI.errors && !props.UI.loading) {\n      setBody(\"\");\n      setOpen(false);\n      setErrors({});\n    }\n  }, [props]);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    props.clearErrors();\n    setOpen(false);\n    setErrors({});\n  };\n\n  const handleChange = (event) => {\n    setBody(event.target.value);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    props.postScream({ body });\n  };\n\n  const {\n    classes,\n    UI: { loading },\n  } = props;\n\n  return (\n    <Fragment>\n      <MyButton onClick={handleOpen} tip=\"Post a Scream!\">\n        <AddIcon />\n      </MyButton>\n      <Dialog open={open} onClose={handleClose} fullWidth maxWidth=\"sm\">\n        <MyButton\n          tip=\"Close\"\n          onClick={handleClose}\n          tipClassName={classes.closeButton}\n        >\n          <CloseIcon />\n        </MyButton>\n        <DialogTitle>Post a New Scream</DialogTitle>\n        <DialogContent>\n          <form onSubmit={handleSubmit}>\n            <TextField\n              name=\"body\"\n              type=\"text\"\n              label=\"Scream\"\n              multiline\n              rows=\"3\"\n              placeholder=\"Scream at your fellow Saplings!\"\n              error={errors.body ? true : false}\n              helperText={errors.body}\n              className={classes.textField}\n              onChange={handleChange}\n              fullWidth\n            />\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submitButton}\n              disabled={loading}\n            >\n              Submit\n              {loading && (\n                <CircularProgress\n                  size={30}\n                  className={classes.progressSpinner}\n                />\n              )}\n            </Button>\n          </form>\n        </DialogContent>\n      </Dialog>\n    </Fragment>\n  );\n}\n\nPostScream.propTypes = {\n  postScream: PropTypes.func.isRequired,\n  clearErrors: PropTypes.func.isRequired,\n  UI: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  UI: state.UI,\n});\n\nexport default connect(mapStateToProps, { postScream, clearErrors })(\n  withStyles(styles)(PostScream)\n);\n","import React, { useState, Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport dayjs from \"dayjs\";\nimport relativeTime from \"dayjs/plugin/relativeTime\";\nimport PropTypes from \"prop-types\";\n\n// Material Ui\nimport Menu from \"@material-ui/core/Menu\";\nimport Typography from \"@material-ui/core/Typography\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Badge from \"@material-ui/core/Badge\";\n\n// Icons\nimport NotificationIcon from \"@material-ui/icons/Notifications\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport ChatIcon from \"@material-ui/icons/Chat\";\n\n// Redux\nimport { connect } from \"react-redux\";\nimport { markNotificationsRead } from \"../../redux/actions/userActions\";\n\nfunction Notifications(props) {\n  dayjs.extend(relativeTime);\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleOpen = (event) => {\n    setAnchorEl(event.target);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const onMenuOpened = () => {\n    let unreadNotificationsIds = props.notifications\n      .filter((not) => !not.read)\n      .map((not) => not.notificationId);\n\n    props.markNotificationsRead(unreadNotificationsIds);\n  };\n\n  let notificationsIcon;\n  if (props.notifications && props.notifications.length > 0) {\n    props.notifications.filter((not) => not.read === false).length > 0\n      ? (notificationsIcon = (\n          <Badge\n            badgeContent={\n              props.notifications.filter((not) => not.read === false).length\n            }\n            color=\"secondary\"\n          >\n            <NotificationIcon />\n          </Badge>\n        ))\n      : (notificationsIcon = <NotificationIcon />);\n  } else {\n    notificationsIcon = <NotificationIcon />;\n  }\n\n  let notificationsMarkup =\n    props.notifications && props.notifications.length > 0 ? (\n      props.notifications.map((not) => {\n        const verb = not.type === \"like\" ? \"liked\" : \"commented on\";\n        const time = dayjs(not.createdAt).fromNow();\n        const iconColor = not.read ? \"primary\" : \"seconday\";\n        const icon =\n          not.type === \"like\" ? (\n            <FavoriteIcon color={iconColor} style={{ marginRight: 10 }} />\n          ) : (\n            <ChatIcon color={iconColor} style={{ marginRight: 10 }} />\n          );\n        return (\n          <MenuItem key={not.createdAt} onClick={handleClose}>\n            {icon}\n            <Typography\n              component={Link}\n              color=\"default\"\n              variant=\"body1\"\n              to={`/users/${not.recipient}/scream/${not.screamId}`}\n            >\n              {not.sender} {verb} your scream {time}\n            </Typography>\n          </MenuItem>\n        );\n      })\n    ) : (\n      <MenuItem onClick={handleClose}>You have no notifications yet</MenuItem>\n    );\n\n  return (\n    <Fragment>\n      <Tooltip title=\"Notifications\">\n        <IconButton\n          aria-owns={anchorEl ? \"simple-menu\" : undefined}\n          aria-haspopup=\"true\"\n          onClick={handleOpen}\n        >\n          {notificationsIcon}\n        </IconButton>\n      </Tooltip>\n      <Menu\n        anchorEl={anchorEl}\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n        onEntered={onMenuOpened}\n      >\n        {notificationsMarkup}\n      </Menu>\n    </Fragment>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  notifications: state.user.notifications,\n});\n\nNotifications.propTypes = {\n  markNotificationsRead: PropTypes.func.isRequired,\n  notifications: PropTypes.array.isRequired,\n};\n\nexport default connect(mapStateToProps, { markNotificationsRead })(\n  Notifications\n);\n","import React, { Fragment, useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n// Material Ui\nimport Menu from \"@material-ui/core/Menu\";\nimport Typography from \"@material-ui/core/Typography\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Badge from \"@material-ui/core/Badge\";\n\n// Icons\nimport PeopleIcon from \"@material-ui/icons/People\";\nimport PersonIcon from \"@material-ui/icons/Person\";\n\n// Redux\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\n\nfunction FriendsList(props) {\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [friends, setFriends] = useState([]);\n\n  useEffect(() => {\n    axios.get(\"/getFriends\").then((res) => {\n      setFriends(res.data);\n    });\n  }, []);\n\n  const handleOpen = (event) => {\n    setAnchorEl(event.target);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  let friendsListMarkup =\n    friends && friends.length > 0 ? (\n      friends.map((friend) => {\n        return (\n          <MenuItem key={friend.createdAt} onClick={handleClose}>\n            <PersonIcon color=\"primary\" style={{ marginRight: 10 }} />\n            <Typography\n              component={Link}\n              color=\"default\"\n              variant=\"body1\"\n              to={`/users/${friend.handle}`}\n            >\n              {friend.handle} is your Friend!\n            </Typography>\n          </MenuItem>\n        );\n      })\n    ) : (\n      <MenuItem onClick={handleClose}>You have no friends yet</MenuItem>\n    );\n\n  return (\n    <Fragment>\n      <Tooltip title=\"Friends list\">\n        <IconButton\n          aria-owns={anchorEl ? \"simple-menu\" : undefined}\n          aria-haspopup=\"true\"\n          onClick={handleOpen}\n        >\n          <PeopleIcon />\n        </IconButton>\n      </Tooltip>\n      <Menu anchorEl={anchorEl} open={Boolean(anchorEl)} onClose={handleClose}>\n        {friendsListMarkup}\n      </Menu>\n    </Fragment>\n  );\n}\n\nexport default FriendsList;\n","import React, { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport MyButton from \"../../util/myButton\";\nimport PostScream from \"../scream/PostScream\";\nimport Notifications from \"./Notifications\";\nimport FriendsList from \"./FriendsList\";\n\n// Material UI Imports\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Button from \"@material-ui/core/Button\";\n\n// Icons\nimport HomeIcon from \"@material-ui/icons/Home\";\n\nfunction Navbar(props) {\n  const { authenticated } = props;\n\n  return (\n    <AppBar>\n      <Toolbar className=\"nav-container\">\n        {authenticated ? (\n          <Fragment>\n            <PostScream />\n            <Link to=\"/\">\n              <MyButton tip=\"Home\">\n                <HomeIcon />\n              </MyButton>\n            </Link>\n            <Notifications />\n            <FriendsList />\n          </Fragment>\n        ) : (\n          <Fragment>\n            <Button color=\"inherit\" component={Link} to=\"/login\">\n              Login\n            </Button>\n            <Button color=\"inherit\" component={Link} to=\"/\">\n              Home\n            </Button>\n            <Button color=\"inherit\" component={Link} to=\"/signup\">\n              Signup\n            </Button>\n          </Fragment>\n        )}\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nNavbar.propTypes = {\n  authenticated: PropTypes.bool.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  authenticated: state.user.authenticated,\n});\n\nexport default connect(mapStateToProps)(Navbar);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst AuthRoute = ({ component: Component, authenticated, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        authenticated === true ? <Redirect to=\"/\" /> : <Component {...props} />\n      }\n    />\n  );\n};\n\nAuthRoute.propTypes = {\n  user: PropTypes.object,\n};\n\nconst mapStateToProps = (state) => ({\n  authenticated: state.user.authenticated,\n});\n\nexport default connect(mapStateToProps)(AuthRoute);\n","import React, { useState, Fragment } from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport MyButton from \"../../util/myButton\";\nimport { deleteScream } from \"../../redux/actions/dataActions\";\n\n// Material ui\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\n\nconst styles = {\n  deleteButton: {\n    position: \"absolute\",\n    left: \"90%\",\n    top: \"10%\",\n  },\n};\n\nfunction DeleteScream(props) {\n  const { classes } = props;\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const deleteScream = () => {\n    props.deleteScream(props.screamId);\n    setOpen(false);\n  };\n\n  return (\n    <Fragment>\n      <MyButton\n        tip=\"Delete Scream\"\n        onClick={handleOpen}\n        btnClassName={classes.deleteButton}\n      >\n        <DeleteOutline color=\"secondary\" />\n      </MyButton>\n      <Dialog open={open} onClose={handleClose} fullWidth maxWidth=\"sm\">\n        <DialogTitle>Are you sure you want to delete this scream?</DialogTitle>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={deleteScream} color=\"secondary\">\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Fragment>\n  );\n}\n\nDeleteScream.propTypes = {\n  deleteScream: PropTypes.func.isRequired,\n  classes: PropTypes.object.isRequired,\n  screamId: PropTypes.string.isRequired,\n};\n\nexport default connect(null, { deleteScream })(\n  withStyles(styles)(DeleteScream)\n);\n","import React from \"react\";\nimport MyButton from \"../../util/myButton\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { likeScream, unlikeScream } from \"../../redux/actions/dataActions\";\n\n// Icons\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport FavoriteBorder from \"@material-ui/icons/FavoriteBorder\";\n\nfunction LikeButton(props) {\n  const { authenticated } = props.user;\n  const likedScream = () => {\n    if (\n      props.user.likes &&\n      props.user.likes.find((like) => like.screamId === props.screamId)\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const likeScream = () => {\n    props.likeScream(props.screamId);\n  };\n\n  const unlikeScream = () => {\n    props.unlikeScream(props.screamId);\n  };\n  const likeButton = !authenticated ? (\n    <Link to=\"/login\">\n      <MyButton tip=\"Like\">\n        <FavoriteBorder color=\"primary\" />\n      </MyButton>\n    </Link>\n  ) : likedScream() ? (\n    <MyButton tip=\"Unlike\" onClick={unlikeScream}>\n      <FavoriteIcon color=\"primary\" />\n    </MyButton>\n  ) : (\n    <MyButton tip=\"Like\" onClick={likeScream}>\n      <FavoriteBorder color=\"primary\" />\n    </MyButton>\n  );\n\n  return likeButton;\n}\n\nLikeButton.propTypes = {\n  user: PropTypes.object.isRequired,\n  screamId: PropTypes.string.isRequired,\n  likeScream: PropTypes.func.isRequired,\n  unlikeScream: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n});\n\nconst mapActionsToProps = {\n  likeScream,\n  unlikeScream,\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(LikeButton);\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport dayjs from \"dayjs\";\n\n// Material UI\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst styles = (theme) => ({\n  ...theme.spreadThis,\n  commentImage: {\n    maxWidth: \"100%\",\n    height: \"80%\",\n    width: \"100%\",\n    objectFit: \"cover\",\n    borderRadius: \"50%\",\n  },\n  commentData: {\n    marginLeft: 20,\n  },\n});\n\nfunction Comments(props) {\n  const { classes, comments } = props;\n\n  return (\n    <Grid container>\n      {comments.map((comment, index) => {\n        const { body, createdAt, userImage, userHandle } = comment;\n        return (\n          <Fragment key={createdAt}>\n            <Grid item sm={12}>\n              <Grid container>\n                <Grid item sm={2}>\n                  <img\n                    src={userImage}\n                    alt=\"comment\"\n                    className={classes.commentImage}\n                  />\n                </Grid>\n                <Grid item sm={9}>\n                  <div className={classes.commentData}>\n                    <Typography\n                      variant=\"h5\"\n                      component={Link}\n                      to={`/users/${userHandle}`}\n                      color=\"primary\"\n                    >\n                      {userHandle}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\">\n                      {dayjs(createdAt).format(\"h:mm a, MMMM DD YYYY\")}\n                    </Typography>\n                    <hr className={classes.invisibleSeparator} />\n                    <Typography variant=\"body1\">{body}</Typography>\n                  </div>\n                </Grid>\n              </Grid>\n            </Grid>\n            {index !== comment.length - 1 && (\n              <hr className={classes.visibleSeparator} />\n            )}\n          </Fragment>\n        );\n      })}\n    </Grid>\n  );\n}\n\nComments.propTypes = {\n  comments: PropTypes.array.isRequired,\n};\n\nexport default withStyles(styles)(Comments);\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n\n// Material Ui\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\n\n// Redux\nimport { connect } from \"react-redux\";\nimport { submitComment } from \"../../redux/actions/dataActions\";\n\nconst styles = (theme) => ({\n  ...theme.spreadThis,\n});\n\nfunction CommentForm(props) {\n  const { classes, authenticated } = props;\n  const [body, setBody] = useState(\"\");\n  const [errors, setErrors] = useState({});\n\n  useEffect(() => {\n    if (props.UI.errors) {\n      setErrors(props.UI.errors);\n    }\n\n    if (!props.UI.errors && !props.UI.loading) {\n      setBody(\"\");\n    }\n  }, [props]);\n\n  const handleChange = (event) => {\n    setBody(event.target.value);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    props.submitComment(props.screamId, { body });\n  };\n\n  const commentFormMarkup = authenticated ? (\n    <Grid item sm={12} style={{ textAlign: \"center\" }}>\n      <form onSubmit={handleSubmit}>\n        <TextField\n          name=\"body\"\n          type=\"text\"\n          label=\"Comment on Scream\"\n          error={errors.comment ? true : false}\n          helperText={errors.comment}\n          value={body}\n          onChange={handleChange}\n          fullWidth\n          className={classes.textField}\n        />\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.button}\n        >\n          Submit\n        </Button>\n      </form>\n      <hr className={classes.visibleSeparator} />\n    </Grid>\n  ) : null;\n\n  return commentFormMarkup;\n}\n\nCommentForm.propTypes = {\n  UI: PropTypes.object.isRequired,\n  submitComment: PropTypes.func.isRequired,\n  authenticated: PropTypes.bool.isRequired,\n  classes: PropTypes.object.isRequired,\n  screamId: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  UI: state.UI,\n  authenticated: state.user.authenticated,\n});\n\nexport default connect(mapStateToProps, { submitComment })(\n  withStyles(styles)(CommentForm)\n);\n","import React, { useState, useEffect, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport MyButton from \"../../util/myButton\";\nimport dayjs from \"dayjs\";\nimport { Link } from \"react-router-dom\";\nimport LikeButton from \"./LikeButton\";\nimport Comments from \"./Comments\";\nimport CommentForm from \"./CommentForm\";\n\n// MUI Stuff\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\n\n// Icons\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport UnfoldMore from \"@material-ui/icons/UnfoldMore\";\nimport ChatIcon from \"@material-ui/icons/Chat\";\n\n// Redux stuff\nimport { connect } from \"react-redux\";\nimport { getScream, clearErrors } from \"../../redux/actions/dataActions\";\n\nconst styles = (theme) => ({\n  ...theme.spreadThis,\n  profileImage: {\n    maxWidth: 200,\n    height: 200,\n    borderRadius: \"50%\",\n    objectFit: \"cover\",\n  },\n  dialogContent: {\n    padding: 20,\n  },\n  closeButton: {\n    position: \"absolute\",\n    left: \"90%\",\n  },\n  expandButton: {\n    position: \"absolute\",\n    left: \"90%\",\n  },\n  spinnerDiv: {\n    textAlign: \"center\",\n    marginTop: 50,\n    marginBottom: 50,\n  },\n});\n\nfunction ScreamDialog(props) {\n  const [open, setOpen] = useState(false);\n  const [oldPath, setOldPath] = useState(\"\");\n  const [newPath, setNewPath] = useState(\"\");\n\n  useEffect(() => {\n    if (props.openDialog) {\n      handleOpen();\n    }\n  }, []);\n\n  const handleOpen = () => {\n    let oldPath = window.location.pathname;\n\n    const { userHandle, screamId } = props;\n    const newPath = `/users/${userHandle}/scream/${screamId}`;\n\n    if (oldPath === newPath) oldPath = `/users/${userHandle}`;\n\n    window.history.pushState(null, null, newPath);\n\n    setOpen(true);\n    setOldPath(oldPath);\n    setNewPath(newPath);\n    props.getScream(props.screamId);\n  };\n  const handleClose = () => {\n    window.history.pushState(null, null, oldPath);\n    setOpen(false);\n    props.clearErrors();\n  };\n\n  const {\n    classes,\n    scream: {\n      screamId,\n      body,\n      createdAt,\n      likeCount,\n      commentCount,\n      userImage,\n      userHandle,\n      comments,\n    },\n    UI: { loading },\n  } = props;\n\n  const dialogMarkup = loading ? (\n    <div className={classes.spinnerDiv}>\n      <CircularProgress size={200} thickness={2} />\n    </div>\n  ) : (\n    <Grid container spacing={16}>\n      <Grid item sm={5}>\n        <img src={userImage} alt=\"Profile\" className={classes.profileImage} />\n      </Grid>\n      <Grid item sm={7}>\n        <Typography\n          component={Link}\n          color=\"primary\"\n          variant=\"h5\"\n          to={`/users/${userHandle}`}\n        >\n          @{userHandle}\n        </Typography>\n        <hr className={classes.invisibleSeparator} />\n        <Typography variant=\"body2\" color=\"textSecondary\">\n          {dayjs(createdAt).format(\"h:mm a, MMMM DD YYYY\")}\n        </Typography>\n        <hr className={classes.invisibleSeparator} />\n        <Typography variant=\"body1\">{body}</Typography>\n        <LikeButton screamId={screamId} />\n        <span>{likeCount} likes</span>\n        <MyButton tip=\"Comments\">\n          <ChatIcon color=\"primary\" />\n        </MyButton>\n        <span>{commentCount}</span>\n      </Grid>\n      <hr className={classes.visibleSeparator} />\n      <CommentForm screamId={screamId} />\n      <Comments comments={comments} />\n    </Grid>\n  );\n  return (\n    <Fragment>\n      <MyButton\n        onClick={handleOpen}\n        tip=\"Expand scream\"\n        tipClassName={classes.expandButton}\n      >\n        <UnfoldMore color=\"primary\" />\n      </MyButton>\n      <Dialog open={open} onClose={handleClose} fullWidth maxWidth=\"sm\">\n        <MyButton\n          tip=\"Close\"\n          onClick={handleClose}\n          tipClassName={classes.closeButton}\n        >\n          <CloseIcon />\n        </MyButton>\n        <DialogContent className={classes.dialogContent}>\n          {dialogMarkup}\n        </DialogContent>\n      </Dialog>\n    </Fragment>\n  );\n}\n\nScreamDialog.propTypes = {\n  clearErrors: PropTypes.func.isRequired,\n  getScream: PropTypes.func.isRequired,\n  screamId: PropTypes.string.isRequired,\n  userHandle: PropTypes.string.isRequired,\n  scream: PropTypes.object.isRequired,\n  UI: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  scream: state.data.scream,\n  UI: state.UI,\n});\n\nconst mapActionsToProps = {\n  getScream,\n  clearErrors,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapActionsToProps\n)(withStyles(styles)(ScreamDialog));\n","import React from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { Link } from \"react-router-dom\";\nimport dayjs from \"dayjs\";\nimport relativeTime from \"dayjs/plugin/relativeTime\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport MyButton from \"../../util/myButton\";\nimport DeleteScream from \"./DeleteScream\";\nimport ScreamDialog from \"./ScreamDialog\";\nimport LikeButton from \"./LikeButton\";\n\n// Material-UI Stuff\nimport Card from \"@material-ui/core/Card\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ChatIcon from \"@material-ui/icons/Chat\";\nconst styles = {\n  card: {\n    position: \"relative\",\n    display: \"flex\",\n    marginBottom: 20,\n  },\n  image: {\n    minWidth: 200,\n  },\n  content: {\n    padding: 25,\n    objectFit: \"cover\",\n  },\n};\n\nfunction Scream(props) {\n  const {\n    classes,\n    scream: {\n      body,\n      createdAt,\n      userImage,\n      userHandle,\n      likeCount,\n      commentCount,\n      screamId,\n    },\n    user: {\n      authenticated,\n      credentials: { handle },\n    },\n  } = props;\n\n  const deleteButton =\n    authenticated && userHandle === handle ? (\n      <DeleteScream screamId={screamId} />\n    ) : null;\n\n  dayjs.extend(relativeTime);\n\n  return (\n    <Card className={classes.card}>\n      <CardMedia\n        image={userImage}\n        title=\"Profile Image\"\n        className={classes.image}\n      />\n      <CardContent className={classes.content}>\n        <Typography\n          variant=\"h5\"\n          component={Link}\n          to={`/users/${userHandle}`}\n          color=\"primary\"\n        >\n          {\" \"}\n          {userHandle}\n        </Typography>\n        {deleteButton}\n        <Typography variant=\"body2\" color=\"textSecondary\">\n          {dayjs(createdAt).fromNow()}\n        </Typography>\n        <Typography variant=\"body1\">{body}</Typography>\n        <LikeButton screamId={screamId} />\n        <span>{likeCount} Likes</span>\n        <MyButton tip=\"Comments\">\n          <ChatIcon color=\"primary\" />\n        </MyButton>\n        <span>{commentCount} </span>\n        <ScreamDialog\n          screamId={screamId}\n          userHandle={userHandle}\n          openDialog={props.openDialog}\n        />\n      </CardContent>\n    </Card>\n  );\n}\n\nScream.propTypes = {\n  user: PropTypes.object.isRequired,\n  scream: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n  openDialog: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n});\n\nexport default connect(mapStateToProps)(withStyles(styles)(Scream));\n","import React, { useState, useEffect, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport MyButton from \"../../util/myButton\";\n// Material UI\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport EditIcon from \"@material-ui/icons/Edit\";\n\n// Redux\nimport { connect } from \"react-redux\";\nimport { editUserDetails } from \"../../redux/actions/userActions\";\n\nconst styles = (theme) => ({\n  ...theme.spreadThis,\n  button: {\n    float: \"right\",\n  },\n});\n\nfunction EditDetails(props) {\n  const [bio, setBio] = useState(\"\");\n  const [website, setWebsite] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [open, setOpen] = useState(false);\n\n  const { classes } = props;\n\n  const mapUserDetailsToState = (credentials) => {\n    setBio(credentials.bio ? credentials.bio : \"\");\n    setWebsite(credentials.website ? credentials.website : \"\");\n    setLocation(credentials.location ? credentials.location : \"\");\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleChange = (event) => {\n    if (event.target.name === \"bio\") setBio(event.target.value);\n    else if (event.target.name === \"website\") setWebsite(event.target.value);\n    else setLocation(event.target.value);\n  };\n\n  const handleSubmit = () => {\n    const userDetails = {\n      bio,\n      website,\n      location,\n    };\n    props.editUserDetails(userDetails);\n    handleClose();\n  };\n\n  useEffect(() => {\n    const { credentials } = props;\n    mapUserDetailsToState(credentials);\n  }, []);\n\n  return (\n    <Fragment>\n      <MyButton\n        tip=\"Edit Details\"\n        onClick={handleOpen}\n        btnClassName={classes.button}\n      >\n        <EditIcon color=\"primary\" />\n      </MyButton>\n      <Dialog open={open} onClose={handleClose} fullWidth maxWidth=\"sm\">\n        <DialogTitle>Edit your details</DialogTitle>\n        <DialogContent>\n          <form>\n            <TextField\n              name=\"bio\"\n              type=\"text\"\n              label=\"Bio\"\n              multiline\n              rows=\"3\"\n              placeholder=\"A short bio about yourself\"\n              className={classes.textField}\n              value={bio}\n              onChange={handleChange}\n              fullWidth\n            />\n            <TextField\n              name=\"website\"\n              type=\"text\"\n              label=\"Website\"\n              placeholder=\"Your personal website\"\n              className={classes.textField}\n              value={website}\n              onChange={handleChange}\n              fullWidth\n            />\n            <TextField\n              name=\"location\"\n              type=\"text\"\n              label=\"Location\"\n              placeholder=\"Where you live\"\n              className={classes.textField}\n              value={location}\n              onChange={handleChange}\n              fullWidth\n            />\n          </form>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleSubmit} color=\"primary\">\n            Save\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Fragment>\n  );\n}\n\nEditDetails.propTypes = {\n  editUserDetails: PropTypes.func.isRequired,\n  classes: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  credentials: state.user.credentials,\n});\n\nexport default connect(mapStateToProps, { editUserDetails })(\n  withStyles(styles)(EditDetails)\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport NoImg from \"../images/no-img.png\";\n\n// Material UI\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport LocationOn from \"@material-ui/icons/LocationOn\";\nimport LinkIcon from \"@material-ui/icons/Link\";\nimport CalendarToday from \"@material-ui/icons/CalendarToday\";\n\nconst styles = (theme) => ({\n  ...theme.spreadThis,\n  handle: {\n    height: 20,\n    backgroundColor: theme.palette.primary.main,\n    width: 60,\n    margin: \"0 auto 7px auto\",\n  },\n  fullLine: {\n    height: 15,\n    backgroundColor: \"rgba(0,0,0,0.6)\",\n    width: \"100%\",\n    marginBottom: 10,\n  },\n  halfLine: {\n    height: 15,\n    backgroundColor: \"rgba(0,0,0,0.6)\",\n    width: \"50%\",\n    marginBottom: 10,\n  },\n});\n\nconst ProfileSkeleton = (props) => {\n  const { classes } = props;\n  return (\n    <Paper className={classes.paper}>\n      <div className={classes.profile}>\n        <div className=\"image-wrapper\">\n          <img src={NoImg} alt=\"profile\" className=\"profile-image\" />\n        </div>\n        <hr />\n        <div className=\"profile-details\">\n          <div className={classes.handle} />\n          <hr />\n          <div className={classes.fullLine} />\n          <div className={classes.fullLine} />\n          <hr />\n          <LocationOn color=\"primary\">\n            <span>Location</span>\n          </LocationOn>\n          <hr />\n          <LinkIcon color=\"primary\" />\n          https://website.com\n          <hr />\n          <CalendarToday color=\"Primary\" />\n          Joined Date\n        </div>\n      </div>\n    </Paper>\n  );\n};\n\nProfileSkeleton.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ProfileSkeleton);\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport dayjs from \"dayjs\";\nimport { logoutUser, uploadImage } from \"../../redux/actions/userActions\";\nimport EditDetails from \"./EditDetails\";\nimport MyButton from \"../../util/myButton\";\nimport ProfileSkeleton from \"../../util/ProfileSkeleton\";\n\n// MUI Imports\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Button from \"@material-ui/core/Button\";\nimport MuiLink from \"@material-ui/core/Link\";\nimport Typography from \"@material-ui/core/Typography\";\nimport LocationOn from \"@material-ui/icons/LocationOn\";\nimport LinkIcon from \"@material-ui/icons/Link\";\nimport CalendarToday from \"@material-ui/icons/CalendarToday\";\nimport Paper from \"@material-ui/core/Paper\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport KeyboardReturn from \"@material-ui/icons/KeyboardReturn\";\n\nconst styles = (theme) => ({\n  ...theme.spreadThis,\n});\n\nfunction Profile(props) {\n  const handleImageChange = (event) => {\n    const image = event.target.files[0];\n    console.log(image.name);\n    // Send to the server\n    const formData = new FormData();\n    formData.append(\"image\", image, image.name);\n    props.uploadImage(formData);\n  };\n\n  const handleEditPicture = () => {\n    const fileInput = document.getElementById(\"imageInput\");\n    fileInput.click();\n  };\n\n  const handleLogout = () => {\n    props.logoutUser();\n  };\n\n  const {\n    classes,\n    user: {\n      credentials: { handle, createdAt, imageUrl, bio, website, location },\n      loading,\n      authenticated,\n    },\n  } = props;\n\n  let profileMarkup = !loading ? (\n    authenticated ? (\n      <Paper className={classes.paper}>\n        <div className={classes.profile}>\n          <div className=\"image-wrapper\">\n            <img src={imageUrl} alt=\"profile\" className=\"profile-image\" />\n            <input\n              type=\"file\"\n              id=\"imageInput\"\n              hidden=\"hidden\"\n              onChange={handleImageChange}\n            />\n            <MyButton\n              tip=\"Edit profile picture\"\n              onClick={handleEditPicture}\n              btnClassName=\"button\"\n            >\n              <EditIcon color=\"primary\"></EditIcon>\n            </MyButton>\n          </div>\n          <hr />\n          <div className=\"profile-details\">\n            <MuiLink\n              component={Link}\n              to={`/users/${handle}`}\n              color=\"primary\"\n              variant=\"h5\"\n            >\n              @{handle}\n            </MuiLink>\n            <hr />\n            {bio && <Typography variant=\"body2\">{bio}</Typography>}\n            <hr />\n            {location && (\n              <Fragment>\n                <LocationOn color=\"primary\" />\n                <span>{location}</span>\n                <hr />\n              </Fragment>\n            )}\n            {website && (\n              <Fragment>\n                <LinkIcon color=\"primary\" />\n                <a href={website} target=\"_blank\" rel=\"noopener noreferrer\">\n                  {\" \"}\n                  {website}\n                </a>\n                <hr />\n              </Fragment>\n            )}\n            <CalendarToday color=\"primary\" />{\" \"}\n            <span>Joined {dayjs(createdAt).format(\"MMM YYYY\")}</span>\n          </div>\n          <MyButton tip=\"Logout\" onClick={handleLogout} btnClassName=\"button\">\n            <KeyboardReturn color=\"primary\"></KeyboardReturn>\n          </MyButton>\n          <EditDetails />\n        </div>\n      </Paper>\n    ) : (\n      <Paper className={classes.paper}>\n        <Typography variant=\"body2\" align=\"center\">\n          No profile found, please login again\n        </Typography>\n        <div className={classes.buttons}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            component={Link}\n            to=\"/login\"\n          >\n            Login\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            component={Link}\n            to=\"/signup\"\n          >\n            Signup\n          </Button>\n        </div>\n      </Paper>\n    )\n  ) : (\n    <ProfileSkeleton />\n  );\n\n  return profileMarkup;\n}\n\nProfile.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  uploadImage: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n});\n\nconst mapActionsToProps = { logoutUser, uploadImage };\n\nexport default connect(\n  mapStateToProps,\n  mapActionsToProps\n)(withStyles(styles)(Profile));\n","import React, { Fragment } from \"react\";\nimport NoImg from \"../images/no-img.png\";\nimport PropTypes from \"prop-types\";\n\n// Material UI\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\n\nconst styles = (theme) => ({\n  ...theme.spreadThis,\n  card: {\n    display: \"flex\",\n    marginBottom: 20,\n  },\n  cardContent: {\n    width: \"100%\",\n    flexDirection: \"column\",\n    padding: 25,\n  },\n  cover: {\n    minWidth: 200,\n    objectFit: \"cover\",\n  },\n  handle: {\n    width: 60,\n    height: 18,\n    backgroundColor: theme.palette.primary.main,\n    marginBottom: 7,\n  },\n  date: {\n    height: 14,\n    width: 100,\n    backgroundColor: \"rgba(0,0,0,0.3)\",\n    marginBottom: 10,\n  },\n  fullLine: {\n    height: 15,\n    width: \"90%\",\n    marginBottom: 10,\n    backgroundColor: \"rgba(0,0,0,0.6)\",\n  },\n  halfLine: {\n    height: 15,\n    width: \"50%\",\n    marginBottom: 10,\n    backgroundColor: \"rgba(0,0,0,0.6)\",\n  },\n});\n\nconst ScreamSkeleton = (props) => {\n  const { classes } = props;\n  const content = Array.from({ length: 5 }).map((item, index) => (\n    <Card className={classes.card} key={index}>\n      <CardMedia className={classes.cover} image={NoImg} />\n      <CardContent className={classes.cardContent}>\n        <div className={classes.handle} />\n        <div className={classes.date} />\n        <div className={classes.fullLine} />\n        <div className={classes.fullLine} />\n        <div className={classes.halfLine} />\n      </CardContent>\n    </Card>\n  ));\n  return <Fragment>{content}</Fragment>;\n};\n\nScreamSkeleton.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ScreamSkeleton);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { logoutUser, uploadImage } from \"../../redux/actions/userActions\";\n\n// Material UI\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Divider from \"@material-ui/core/Divider\";\nimport InboxIcon from \"@material-ui/icons/Inbox\";\nimport DraftsIcon from \"@material-ui/icons/Drafts\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport PeopleIcon from \"@material-ui/icons/People\";\nimport ChatIcon from \"@material-ui/icons/Chat\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n\n// Redux\nimport { connect } from \"react-redux\";\n\nconst styles = (theme) => ({\n  ...theme.spreadThis,\n  root: {\n    backgroundColor: \"#fff\",\n    borderRadius: 5,\n    padding: 10,\n  },\n  title: {\n    marginLeft: \"16px\",\n    paddingTop: \"12px\",\n    paddingBottom: \"10px\",\n    fontSize: \"20px\",\n    fontWeight: \"400\",\n    borderBottom: \"3px #32CD32 solid\",\n  },\n});\n\nfunction ShortCuts(props) {\n  const { classes } = props;\n\n  const handleLogout = () => {\n    props.logoutUser();\n  };\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.title}>Shortcuts</div>\n      <List component=\"nav\" aria-label=\"main mailbox folders\">\n        <ListItem button>\n          <ListItemIcon>\n            <InboxIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"News Feed\" />\n        </ListItem>\n\n        <ListItem button>\n          <ListItemIcon>\n            <DraftsIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Inbox\" />\n        </ListItem>\n\n        <ListItem button>\n          <ListItemIcon>\n            <PeopleIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Friends\" />\n        </ListItem>\n\n        <ListItem button>\n          <ListItemIcon>\n            <ChatIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Messages\" />\n        </ListItem>\n\n        <ListItem button>\n          <ListItemIcon>\n            <ExitToAppIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Logout\" onClick={handleLogout} />\n        </ListItem>\n      </List>\n    </div>\n  );\n}\n\nexport default connect(null, { logoutUser })(withStyles(styles)(ShortCuts));\n","import React, { useState, useEffect, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\n\n// Material UI\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport MusicNoteIcon from \"@material-ui/icons/MusicNote\";\n\n// Redux\nimport { connect } from \"react-redux\";\nimport { postScream, clearErrors } from \"../../redux/actions/dataActions\";\n\nconst styles = (theme) => ({\n  ...theme.spreadThis,\n  myDiv: {\n    backgroundColor: \"#fff\",\n    width: \"100%\",\n    height: 160,\n    marginBottom: 20,\n    borderRadius: 5,\n  },\n  userPostImage: {\n    borderRadius: 50,\n    height: 70,\n    width: 70,\n    margin: \"30px auto 0 30px\",\n    padding: 5,\n  },\n  submitButton: {\n    position: \"relative\",\n    marginBottom: \"5px\",\n    marginTop: \"5px\",\n  },\n  progressSpinner: {\n    position: \"absolute\",\n  },\n  footerPost: {\n    display: \"inline-block\",\n    float: \"right\",\n  },\n  postScream: {\n    padding: \"0 10px\",\n  },\n});\n\nfunction ScreamPost(props) {\n  const [errors, setErrors] = useState({});\n  const [body, setBody] = useState(\"\");\n\n  const {\n    classes,\n    user: {\n      credentials: { handle, createdAt, imageUrl, bio, website, location },\n      authenticated,\n    },\n    UI: { loading },\n  } = props;\n\n  useEffect(() => {\n    if (props.UI.errors) {\n      setErrors(props.UI.errors);\n    }\n    if (!props.UI.errors && !props.UI.loading) {\n      setBody(\"\");\n      setErrors({});\n    }\n  }, [props]);\n\n  const handleChange = (event) => {\n    setBody(event.target.value);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    props.postScream({ body });\n  };\n\n  let postScreamMarkup = authenticated ? (\n    <Grid container className={classes.myDiv}>\n      <Grid item sm={2}>\n        <img\n          src={imageUrl}\n          alt=\"user image\"\n          className={classes.userPostImage}\n        />\n      </Grid>\n      <Grid item sm={9} className={classes.postScream}>\n        <form onSubmit={handleSubmit}>\n          <TextField\n            name=\"body\"\n            type=\"text\"\n            label=\"Scream!!\"\n            multiline\n            rows=\"3\"\n            placeholder=\"Scream at your fellow Saplings!\"\n            error={errors.body ? true : false}\n            helperText={errors.body}\n            className={classes.textField}\n            onChange={handleChange}\n            fullWidth\n          />\n          <div className={classes.footerPost}>\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submitButton}\n              disabled={loading}\n            >\n              Post\n              {loading && (\n                <CircularProgress\n                  size={30}\n                  className={classes.progressSpinner}\n                />\n              )}\n            </Button>\n          </div>\n        </form>\n      </Grid>\n      <Grid item sm={1}></Grid>\n    </Grid>\n  ) : null;\n\n  return <Fragment>{postScreamMarkup}</Fragment>;\n}\n\nScreamPost.propTypes = {\n  user: PropTypes.object.isRequired,\n  postScream: PropTypes.func.isRequired,\n  clearErrors: PropTypes.func.isRequired,\n  UI: PropTypes.object.isRequired,\n  authenticated: PropTypes.bool.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  UI: state.UI,\n});\n\nexport default connect(mapStateToProps, { postScream, clearErrors })(\n  withStyles(styles)(ScreamPost)\n);\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\n// Material UI\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\nimport ChatBubbleIcon from \"@material-ui/icons/ChatBubble\";\nimport MuiLink from \"@material-ui/core/Link\";\n\n// Redux\nimport { connect } from \"react-redux\";\n\nconst styles = (theme) => ({\n  ...theme.spreadThis,\n  myContainer: {\n    backgroundColor: \"#fff\",\n    borderRadius: 5,\n    padding: 10,\n    marginTop: 20,\n  },\n  title: {\n    marginLeft: \"16px\",\n    paddingTop: \"12px\",\n    paddingBottom: \"10px\",\n    fontSize: \"20px\",\n    fontWeight: \"400\",\n    borderBottom: \"3px #32CD32 solid\",\n  },\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    margin: \"auto\",\n    maxWidth: 500,\n  },\n  image: {\n    width: 70,\n    height: 70,\n  },\n  img: {\n    margin: \"auto\",\n    display: \"block\",\n    maxWidth: \"80%\",\n    maxHeight: \"100%\",\n    borderRadius: 50,\n  },\n  friendsChatIcon: {\n    color: theme.palette.primary.light,\n    fontSize: 20,\n  },\n});\n\nfunction Friends(props) {\n  const {\n    classes,\n    user: {\n      credentials: { friends },\n      authenticated,\n    },\n  } = props;\n\n  let friendsListMarkup =\n    friends && authenticated ? (\n      <Grid container className={classes.myContainer}>\n        <Grid item sm={12} style={{ paddingBottom: \"20px\" }}>\n          <div className={classes.title}>Friends</div>\n        </Grid>\n        {friends.map((friend) => (\n          <div className={classes.root}>\n            <Paper className={classes.paper}>\n              <Grid container spacing={2}>\n                <Grid item>\n                  <ButtonBase className={classes.image}>\n                    <img\n                      className={classes.img}\n                      alt=\"complex\"\n                      src={friend.imageUrl}\n                    />\n                  </ButtonBase>\n                </Grid>\n                <Grid item xs={12} sm container>\n                  <Grid item xs container direction=\"column\" spacing={2}>\n                    <Grid item xs>\n                      <Typography gutterBottom variant=\"subtitle1\">\n                        <MuiLink\n                          component={Link}\n                          to={`/users/${friend.handle}`}\n                          color=\"primary\"\n                          variant=\"h6\"\n                        >\n                          @{friend.handle}\n                        </MuiLink>\n                      </Typography>\n                      <Typography variant=\"body2\" gutterBottom>\n                        {friend.email}\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                  <Grid item>\n                    <ChatBubbleIcon className={classes.friendsChatIcon} />\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Paper>\n          </div>\n        ))}\n      </Grid>\n    ) : null;\n\n  return <Fragment>{friendsListMarkup}</Fragment>;\n}\n\nFriends.propTypes = {\n  user: PropTypes.object.isRequired,\n  authenticated: PropTypes.bool.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n});\n\nexport default connect(mapStateToProps)(withStyles(styles)(Friends));\n","import React, { useEffect } from \"react\";\nimport Scream from \"../components/scream/Scream\";\nimport Profile from \"../components/profile/Profile\";\nimport { connect } from \"react-redux\";\nimport { getScreams } from \"../redux/actions/dataActions\";\nimport PropTypes from \"prop-types\";\nimport ScreamSkeleton from \"../util/ScreamSkeleton\";\nimport ShortCuts from \"../components/layout/ShortCuts\";\nimport ScreamPost from \"../components/scream/ScreamPost\";\nimport Friends from \"../components/profile/Friends\";\n\n// Material Ui Imports\nimport Grid from \"@material-ui/core/Grid\";\n\nfunction Home(props) {\n  const { screams, loading } = props.data;\n\n  useEffect(() => {\n    props.getScreams();\n  }, []);\n\n  let recentScreamsMarkup = !loading ? (\n    screams.map((scream) => {\n      return <Scream key={scream.screamId} scream={scream} />;\n    })\n  ) : (\n    <ScreamSkeleton />\n  );\n\n  return (\n    <div className=\"homepageContainer\">\n      <Grid container spacing={3}>\n        <Grid item sm={3} xs={12}>\n          <ShortCuts />\n        </Grid>\n        <Grid item sm={6} xs={12}>\n          <ScreamPost />\n          {recentScreamsMarkup}\n        </Grid>\n        <Grid item sm={3} xs={12}>\n          <Profile />\n          <Friends />\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nHome.propTypes = {\n  getScreams: PropTypes.func.isRequired,\n  data: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  data: state.data,\n  weather: state.weather,\n  user: state.user,\n});\n\nconst mapActionsToProps = {\n  getScreams,\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(Home);\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport AppIcon from \"../images/main.png\";\nimport { Link } from \"react-router-dom\";\n\n// Material UI Imports\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\n// Redux Stuff\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../redux/actions/userActions\";\n\nconst styles = (theme) => ({\n  ...theme.spreadThis,\n});\n\nfunction Login(props) {\n  const [email, setEmail] = useState(\"Daniel@email.com\");\n  const [password, setPassword] = useState(\"123456\");\n  const [errors, setErrors] = useState(props);\n\n  const {\n    classes,\n    UI: { loading },\n  } = props;\n\n  useEffect(() => {\n    console.log(props);\n    if (props.UI.errors) {\n      setErrors(props.UI.errors);\n    }\n  }, [props]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // Send request to server\n    const userData = {\n      email: email,\n      password: password,\n    };\n    props.loginUser(userData, props.history);\n  };\n\n  const handleChange = (e) => {\n    if (e.target.name === \"email\") {\n      setEmail(e.target.value);\n    } else {\n      setPassword(e.target.value);\n    }\n  };\n\n  return (\n    <Grid container className={classes.form}>\n      <Grid item sm />\n      <Grid item sm>\n        <img\n          src={AppIcon}\n          alt=\"app icon\"\n          height=\"50px\"\n          width=\"35px\"\n          className={classes.image}\n        />\n        <Typography variant=\"h3\" className={classes.pageTitle}>\n          Login\n        </Typography>\n        <form noValidate onSubmit={handleSubmit}>\n          <TextField\n            id=\"email\"\n            name=\"email\"\n            type=\"email\"\n            label=\"Email\"\n            className={classes.textField}\n            helperText={errors.email}\n            error={errors.email ? true : false}\n            value={email}\n            onChange={handleChange}\n            fullWidth\n          />\n          <TextField\n            id=\"password\"\n            name=\"password\"\n            type=\"password\"\n            label=\"Password\"\n            className={classes.textField}\n            helperText={errors.password}\n            error={errors.password ? true : false}\n            value={password}\n            onChange={handleChange}\n            fullWidth\n          />\n          {errors.general && (\n            <Typography variant=\"body2\" className={classes.customError}>\n              {errors.general}\n            </Typography>\n          )}\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.button}\n            disabled={loading}\n          >\n            Login\n            {loading && (\n              <CircularProgress className={classes.progress} size={30} />\n            )}\n          </Button>\n          <br />\n          <small>\n            Don't have an account? Sign up <Link to=\"/signup\">here</Link>\n          </small>\n        </form>\n      </Grid>\n      <Grid item sm />\n    </Grid>\n  );\n}\n\nLogin.propTypes = {\n  classes: PropTypes.object.isRequired,\n  loginUser: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n  UI: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  UI: state.UI,\n});\n\nconst mapActionsToProps = {\n  loginUser,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapActionsToProps\n)(withStyles(styles)(Login));\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport AppIcon from \"../images/main.png\";\nimport { Link } from \"react-router-dom\";\n\n// Material UI Imports\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\n// Redux Imports\nimport { connect } from \"react-redux\";\nimport { signupUser } from \"../redux/actions/userActions\";\n\nconst styles = (theme) => ({\n  ...theme.spreadThis,\n});\n\nfunction Signup(props) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [handle, setHandle] = useState(\"\");\n  const [errors, setErrors] = useState({});\n  const {\n    classes,\n    UI: { loading },\n  } = props;\n\n  useEffect(() => {\n    console.log(props);\n    if (props.UI.errors) {\n      setErrors(props.UI.errors);\n    }\n  }, [props]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    //setLoading(true);\n    // Send request to server\n    const newUserData = {\n      email: email,\n      password: password,\n      confirmPassword: confirmPassword,\n      handle: handle,\n    };\n\n    props.signupUser(newUserData, props.history);\n  };\n\n  const handleChange = (e) => {\n    if (e.target.name === \"email\") {\n      setEmail(e.target.value);\n    } else if (e.target.name === \"password\") {\n      setPassword(e.target.value);\n    } else if (e.target.name === \"confirmPassword\") {\n      setConfirmPassword(e.target.value);\n    } else setHandle(e.target.value);\n  };\n\n  return (\n    <Grid container className={classes.form}>\n      <Grid item sm />\n      <Grid item sm>\n        <img\n          src={AppIcon}\n          alt=\"app icon\"\n          height=\"50px\"\n          width=\"35px\"\n          className={classes.image}\n        />\n        <Typography variant=\"h3\" className={classes.pageTitle}>\n          Signup\n        </Typography>\n        <form noValidate onSubmit={handleSubmit}>\n          <TextField\n            id=\"email\"\n            name=\"email\"\n            type=\"email\"\n            label=\"Email\"\n            className={classes.textField}\n            helperText={errors.email}\n            error={errors.email ? true : false}\n            value={email}\n            onChange={handleChange}\n            fullWidth\n          />\n          <TextField\n            id=\"password\"\n            name=\"password\"\n            type=\"password\"\n            label=\"Password\"\n            className={classes.textField}\n            helperText={errors.password}\n            error={errors.password ? true : false}\n            value={password}\n            onChange={handleChange}\n            fullWidth\n          />\n          <TextField\n            id=\"confirmPassword\"\n            name=\"confirmPassword\"\n            type=\"password\"\n            label=\"Confirm Password\"\n            className={classes.textField}\n            helperText={errors.confirmPassword}\n            error={errors.confirmPassword ? true : false}\n            value={confirmPassword}\n            onChange={handleChange}\n            fullWidth\n          />\n          <TextField\n            id=\"handle\"\n            name=\"handle\"\n            type=\"handle\"\n            label=\"Handle\"\n            className={classes.textField}\n            helperText={errors.handle}\n            error={errors.handle ? true : false}\n            value={handle}\n            onChange={handleChange}\n            fullWidth\n          />\n          {errors.general && (\n            <Typography variant=\"body2\" className={classes.customError}>\n              {errors.general}\n            </Typography>\n          )}\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.button}\n            disabled={loading}\n          >\n            Signup\n            {loading && (\n              <CircularProgress className={classes.progress} size={30} />\n            )}\n          </Button>\n          <br />\n          <small>\n            Already have an account? Log in <Link to=\"/signup\">here</Link>\n          </small>\n        </form>\n      </Grid>\n      <Grid item sm />\n    </Grid>\n  );\n}\n\nSignup.propTypes = {\n  classes: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired,\n  UI: PropTypes.object.isRequired,\n  signupUser: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  UI: state.UI,\n});\n\nexport default connect(mapStateToProps, { signupUser })(\n  withStyles(styles)(Signup)\n);\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport dayjs from \"dayjs\";\nimport { Link } from \"react-router-dom\";\n// Material Ui\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport MuiLink from \"@material-ui/core/Link\";\nimport { Typography, Paper } from \"@material-ui/core\";\n\n// Icons\nimport LocationOn from \"@material-ui/icons/LocationOn\";\nimport LinkIcon from \"@material-ui/icons/Link\";\nimport CalendarToday from \"@material-ui/icons/CalendarToday\";\n\nconst styles = (theme) => ({\n  ...theme.spreadThis,\n});\n\nfunction StaticProfile(props) {\n  const {\n    classes,\n    profile: { handle, createdAt, imageUrl, bio, website, location },\n  } = props;\n\n  return (\n    <Paper className={classes.paper}>\n      <div className={classes.profile}>\n        <div className=\"image-wrapper\">\n          <img src={imageUrl} alt=\"profile\" className=\"profile-image\" />\n        </div>\n        <hr />\n        <div className=\"profile-details\">\n          <MuiLink\n            component={Link}\n            to={`/users/${handle}`}\n            color=\"primary\"\n            variant=\"h5\"\n          >\n            @{handle}\n          </MuiLink>\n          <hr />\n          {bio && <Typography variant=\"body2\">{bio}</Typography>}\n          <hr />\n          {location && (\n            <Fragment>\n              <LocationOn color=\"primary\" />\n              <span>{location}</span>\n              <hr />\n            </Fragment>\n          )}\n          {website && (\n            <Fragment>\n              <LinkIcon color=\"primary\" />\n              <a href={website} target=\"_blank\" rel=\"noopener noreferrer\">\n                {\" \"}\n                {website}\n              </a>\n              <hr />\n            </Fragment>\n          )}\n          <CalendarToday color=\"primary\" />{\" \"}\n          <span>Joined {dayjs(createdAt).format(\"MMM YYYY\")}</span>\n        </div>\n      </div>\n    </Paper>\n  );\n}\n\nStaticProfile.propTypes = {\n  profile: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(StaticProfile);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { logoutUser, uploadImage } from \"../../redux/actions/userActions\";\n\n// Material UI\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Divider from \"@material-ui/core/Divider\";\nimport InboxIcon from \"@material-ui/icons/Inbox\";\nimport DraftsIcon from \"@material-ui/icons/Drafts\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport PeopleIcon from \"@material-ui/icons/People\";\nimport ChatIcon from \"@material-ui/icons/Chat\";\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\nimport YouTubeIcon from \"@material-ui/icons/YouTube\";\n\n// Redux\nimport { connect } from \"react-redux\";\n\nconst styles = (theme) => ({\n  ...theme.spreadThis,\n  root: {\n    backgroundColor: \"#fff\",\n    borderRadius: 5,\n    padding: \"10px 30px 20px 30px\",\n    marginBottom: 20,\n  },\n  title: {\n    marginLeft: \"16px\",\n    paddingTop: \"12px\",\n    paddingBottom: \"10px\",\n    fontSize: \"20px\",\n    fontWeight: \"400\",\n    borderBottom: \"3px #32CD32 solid\",\n  },\n  facebook: {\n    backgroundColor: \"#2f5b9d\",\n    color: \"#eee\",\n    fontWeight: \"500\",\n    borderRadius: 5,\n    marginBottom: 10,\n    marginTop: 5,\n    \"&:hover\": {\n      backgroundColor: \"#2f5b9d\",\n    },\n  },\n  twitter: {\n    backgroundColor: \"#38bff1\",\n    color: \"#eee\",\n    fontWeight: \"500\",\n    borderRadius: 5,\n    marginBottom: 10,\n    marginTop: 5,\n    \"&:hover\": {\n      backgroundColor: \"#38bff1\",\n    },\n  },\n  youtube: {\n    backgroundColor: \"#f24756\",\n    color: \"#eee\",\n    fontWeight: \"500\",\n    borderRadius: 5,\n    marginBottom: 10,\n    marginTop: 5,\n    \"&:hover\": {\n      backgroundColor: \"#f24756\",\n    },\n  },\n});\n\nfunction Socials(props) {\n  const { classes } = props;\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.title}>Socials</div>\n      <List component=\"nav\" aria-label=\"main mailbox folders\">\n        <ListItem button className={classes.facebook}>\n          <ListItemIcon>\n            <FacebookIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Facebook\" />\n        </ListItem>\n\n        <ListItem button className={classes.twitter}>\n          <ListItemIcon>\n            <TwitterIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Twitter\" />\n        </ListItem>\n\n        <ListItem button className={classes.youtube}>\n          <ListItemIcon>\n            <YouTubeIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Youtube\" />\n        </ListItem>\n      </List>\n    </div>\n  );\n}\n\nexport default connect(null, { logoutUser })(withStyles(styles)(Socials));\n","import React, { Fragment, useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport Scream from \"../components/scream/Scream\";\nimport { getUserData } from \"../redux/actions/dataActions\";\nimport StaticProfile from \"../components/profile/StaticProfile\";\nimport ScreamSkeleton from \"../util/ScreamSkeleton\";\nimport ProfileSkeleton from \"../util/ProfileSkeleton\";\nimport ShortCuts from \"../components/layout/ShortCuts\";\nimport ScreamPost from \"../components/scream/ScreamPost\";\nimport Friends from \"../components/profile/Friends\";\nimport Socials from \"../components/layout/Socials\";\n\n// Material Ui\nimport Grid from \"@material-ui/core/Grid\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Button from \"@material-ui/core/Button\";\nimport CameraAltIcon from \"@material-ui/icons/CameraAlt\";\n\n// Redux\nimport { connect } from \"react-redux\";\n\nconst styles = (theme) => ({\n  myContainer: {\n    margin: \"60px 60px auto 60px\",\n  },\n  coverImage: {\n    boxShadow: \"inset 0 0 0 100vw rgba(0,0,0,0.25)\",\n    background:\n      \"url(https://images.pexels.com/photos/610293/pexels-photo-610293.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260)\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundAttachment: \"fixed\",\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n    width: \"100%\",\n    height: \"47vh\",\n  },\n  insideCover: {\n    zIndex: 1,\n    height: \"100%\",\n    width: \"100%\",\n  },\n  editCoverPhotoBtn: {\n    left: \"24%\",\n    top: \"80%\",\n    color: \"#eee\",\n    backgroundColor: \"rgba(0,0,0,0.6)\",\n    padding: 12,\n    fontSize: 12,\n    \"&:hover\": {\n      backgroundColor: \"rgba(0,0,0,0.0)\",\n      outline: \"0.5px solid #32CD32\",\n    },\n  },\n  addFriendBtn: {\n    left: \"70%\",\n    top: \"80%\",\n    backgroundColor: theme.palette.primary.main,\n    color: \"#eee\",\n    fontWeight: \"600\",\n    \"&:hover\": {\n      backgroundColor: \"rgba(0,0,0,0.0)\",\n      outline: \"0.5px solid #32CD32\",\n    },\n  },\n  selectionBar: {\n    height: \"9vh\",\n    width: \"100%\",\n    backgroundColor: theme.palette.primary.main,\n    marginBottom: 20,\n    color: \"white\",\n    textAlign: \"center\",\n    fontWeight: \"500\",\n    position: \"relative\",\n  },\n  ul: {\n    listStyleType: \"none\",\n    margin: 0,\n    padding: 0,\n    width: \"100%\",\n    height: \"100%\",\n    position: \"absolute\",\n    top: \"50%\",\n    transform: \"translateY(-30%)\",\n  },\n  li: {\n    display: \"inline\",\n    padding: \"5px 30px\",\n    top: \"100px\",\n    \"&:hover\": {\n      cursor: \"pointer\",\n    },\n  },\n  navtitle: {\n    display: \"inline\",\n    paddingRight: \"100px\",\n    fontSize: \"35px\",\n    fontWeight: \"700\",\n    color: theme.palette.primary.light,\n  },\n  navImageContainer: {\n    position: \"absolute\",\n    zIndex: 1,\n    left: \"9%\",\n    bottom: \"60%\",\n  },\n  navImage: {\n    borderRadius: \"50%\",\n    height: 185,\n    width: 185,\n    border: \"6px solid #eee\",\n  },\n});\n\n// User Page\nfunction User(props) {\n  const [profile, setProfile] = useState(null);\n  const [screamIdParam, setScreamIdParam] = useState(null);\n  const { classes } = props;\n\n  useEffect(() => {\n    const handle = props.match.params.handle;\n    const screamId = props.match.params.screamId;\n\n    if (screamId) setScreamIdParam(screamId);\n\n    props.getUserData(handle);\n    axios\n      .get(`/user/${handle}`)\n      .then((res) => {\n        console.log(res);\n        setProfile(res.data.user);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  const { screams, loading } = props.data;\n\n  const screamsMarkup = loading ? (\n    <ScreamSkeleton />\n  ) : screams == null ? (\n    <p>No screams from this user</p>\n  ) : !screamIdParam ? (\n    screams.map((scream) => <Scream key={scream.screamId} scream={scream} />)\n  ) : (\n    screams.map((scream) => {\n      if (scream.screamId !== screamIdParam) {\n        return <Scream key={scream.screamId} scream={scream} />;\n      } else return <Scream key={scream.screamId} scream={scream} openDialog />;\n    })\n  );\n\n  return (\n    <div className={classes.myContainer}>\n      <div className={classes.coverImage}>\n        <div className={classes.insideCover}>\n          {profile ? (\n            profile.handle === props.user.credentials.handle ? (\n              <Button variant=\"contained\" className={classes.editCoverPhotoBtn}>\n                <CameraAltIcon style={{ paddingRight: \"10px\" }} />\n                Edit Cover Photo\n              </Button>\n            ) : null\n          ) : null}\n          {profile ? (\n            profile.handle != props.user.credentials.handle ? (\n              <Button variant=\"contained\" className={classes.addFriendBtn}>\n                Add Friend\n              </Button>\n            ) : null\n          ) : null}\n        </div>\n      </div>\n      <div className={classes.selectionBar}>\n        <ul className={classes.ul}>\n          <li className={classes.navImageContainer}>\n            {profile ? (\n              <img\n                src={profile.imageUrl}\n                alt=\"profile image\"\n                className={classes.navImage}\n              />\n            ) : null}\n          </li>\n          <li className={classes.navtitle}>\n            {profile ? profile.handle : null}\n          </li>\n          <li className={classes.li}>Time line</li>\n          <li className={classes.li}>Photos</li>\n          <li className={classes.li}>Videos</li>\n          <li className={classes.li}>Friends</li>\n          <li className={classes.li}>About</li>\n        </ul>\n      </div>\n      <Grid container spacing={2}>\n        <Grid item sm={3} xs={12}>\n          <Socials />\n          <ShortCuts />\n        </Grid>\n        <Grid item sm={6} xs={12}>\n          {profile ? (\n            profile.handle === props.user.credentials.handle ? (\n              <ScreamPost />\n            ) : null\n          ) : null}\n          {screamsMarkup}\n        </Grid>\n        <Grid item sm={3} xs={12}>\n          {profile == null ? (\n            <ProfileSkeleton />\n          ) : (\n            <StaticProfile profile={profile} />\n          )}\n          <Friends />\n        </Grid>\n        <Grid item sm={1} />\n      </Grid>\n    </div>\n  );\n}\n\nUser.propTypes = {\n  getUserData: PropTypes.func.isRequired,\n  data: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  data: state.data,\n  user: state.user,\n});\n\nexport default connect(mapStateToProps, { getUserData })(\n  withStyles(styles)(User)\n);\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\"; //\nimport \"./App.css\";\nimport { ThemeProvider as MuiThemeProvider } from \"@material-ui/core/styles\";\nimport createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\nimport themeFile from \"./util/theme\";\nimport jwtDecode from \"jwt-decode\";\nimport axios from \"axios\";\n\n// Redux\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport { SET_AUTHENTICATED } from \"./redux/types\";\nimport { logoutUser, getUserData } from \"./redux/actions/userActions\";\n\n// Components\nimport Navbar from \"./components/layout/Navbar\";\nimport AuthRoute from \"./util/AuthRoute\";\n\n// Pages\nimport home from \"./pages/home\";\nimport login from \"./pages/login\";\nimport signup from \"./pages/signup\";\nimport user from \"./pages/user\";\n\nconst theme = createMuiTheme(themeFile);\n\naxios.defaults.baseURL =\n  \"https://us-central1-saplify-48591.cloudfunctions.net/api\";\n\nconst token = localStorage.FBIdToken;\nif (token) {\n  const decodedToken = jwtDecode(token);\n  if (decodedToken.exp * 1000 < Date.now()) {\n    // Expired\n    store.dispatch(logoutUser());\n    window.location.href = \"/login\";\n  } else {\n    store.dispatch({ type: SET_AUTHENTICATED });\n    axios.defaults.headers.common[\"Authorization\"] = token;\n    store.dispatch(getUserData());\n  }\n}\n\nfunction App() {\n  return (\n    <MuiThemeProvider theme={theme}>\n      <Provider store={store}>\n        <Router>\n          <Navbar />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={home} />\n              <AuthRoute exact path=\"/login\" component={login} />\n              <AuthRoute exact path=\"/signup\" component={signup} />\n              <Route exact path=\"/users/:handle\" component={user} />\n              <Route\n                exact\n                path=\"/users/:handle/scream/:screamId\"\n                component={user}\n              />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    </MuiThemeProvider>\n  );\n}\n\nexport default App;\n","export default {\n  palette: {\n    primary: {\n      light: \"#32CD32\",\n      main: \"#404040\",\n      dark: \"#008394\",\n      contrastText: \"#fff\",\n    },\n    secondary: {\n      light: \"#ff6333\",\n      main: \"#ff3d00\",\n      dark: \"#b22a00\",\n      contrastText: \"#fff\",\n    },\n  },\n  spreadThis: {\n    typography: {\n      useNextVariants: true,\n    },\n    form: {\n      textAlign: \"center\",\n      paddingTop: 90,\n    },\n    image: {\n      margin: \"10px auto 10px auto\",\n    },\n    pageTitle: {\n      margin: \"10px auto 10px auto\",\n    },\n    textField: {\n      margin: \"10px auto 10px auto\",\n    },\n    button: {\n      marginTop: 20,\n      marginBottom: 5,\n      position: \"relative\",\n    },\n    customError: {\n      color: \"red\",\n      fontSize: \"0.8rem\",\n      marginTop: 5,\n    },\n    progress: {\n      position: \"absolute\",\n    },\n    visibleSeparator: {\n      width: \"100%\",\n      borderBottom: \"1px solid rgba(0,0,0,0.1)\",\n      marginBottom: 20,\n    },\n    paper: {\n      padding: 20,\n    },\n    profile: {\n      \"& .image-wrapper\": {\n        textAlign: \"center\",\n        position: \"relative\",\n        \"& button\": {\n          position: \"absolute\",\n          top: \"80%\",\n          left: \"70%\",\n        },\n      },\n      \"& .profile-image\": {\n        width: 200,\n        height: 200,\n        objectFit: \"cover\",\n        maxWidth: \"100%\",\n        borderRadius: \"50%\",\n      },\n      \"& .profile-details\": {\n        textAlign: \"center\",\n        \"& span, svg\": {\n          verticalAlign: \"middle\",\n        },\n        \"& a\": {\n          color: \"#32CD32\",\n        },\n      },\n      \"& hr\": {\n        border: \"none\",\n        margin: \"0 0 10px 0\",\n      },\n      \"& svg.button\": {\n        \"&:hover\": {\n          cursor: \"pointer\",\n        },\n      },\n    },\n    buttons: {\n      textAlign: \"center\",\n      \"& a\": {\n        margin: \"20px 10px\",\n      },\n    },\n  },\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/no-img.5a021ab9.png\";","module.exports = __webpack_public_path__ + \"static/media/main.ca26dff4.png\";"],"sourceRoot":""}